- update readme file
- while it is not possible to install module at runtime,
further refinement are required in the booting sequence.
    - implements cors
    - move 'utils' to 'sys'
    - setup config file
    - install nodemon 
        - https://futurestud.io/tutorials/typescript-use-nodemon-to-restart-your-server-on-changes
        - 

- design and imlement architectural patterns
    - interfaces
    - use modules and controllers as ingerited from base classes
    - decorators
        - https://blog.logrocket.com/a-practical-guide-to-typescript-decorators/
    - injectors
        - https://levelup.gitconnected.com/dependency-injection-in-typescript-2f66912d143c
    - library development
        - https://aganglada.com/blog/how-to-create-your-own-typescript-library
    - IoC/Dependency Injection
        - https://www.npmjs.com/package/node-dependency-injection



- test TypeORM in isolation
        https://github.com/amitavdevzone/nest-js-quiz-manager?utm_source=my-lnk&utm_medium=youtube&utm_campaign=social

        validation:
        https://www.npmjs.com/package/class-validator
        https://github.com/typeorm/typeorm/issues/913

        bcrypt field setting:
        https://stackoverflow.com/questions/5881169/what-column-type-length-should-i-use-for-storing-a-bcrypt-hashed-password-in-a-d
        https://github.com/ademarre/binary-mcf

        nullable fields
        https://github.com/typeorm/typeorm/issues/3738

        auto date column:
        https://github.com/typeorm/typeorm/issues/3738
        @Entity()
        export class MyEntity {
            // ... a lot of attributes here
            @UpdateDateColumn() // nothing more needed
            public updated: Date;
        }

- setup and test TypeORM in cd environment
    - test connection to mysql
    - test execution at user controller
    - test response from common b::response()

/////////////////////////////////////////////////////////////////////////////////////////////
- implement basic registration
    - implement email
        - https://nodemailer.com/about/
        - https://www.cloudmailin.com/blog/sending_and_receiving_email_in_node_2021
        - set up nodemailer
        - set up test mail at cloudmailin
        - set up corpdesk mail account at zohomail.com
        - successfully tested mail send
/////////////////////////////////////////////////////////////////////////////////////////////
    - register with confirmation email
    - push notification:
        - https://pusher.com/tutorials/push-notifications-node-service-workers/
        - https://morioh.com/p/42a0bb87a165
        - https://blog.angular-university.io/angular-push-notifications/
        - https://www.thecoraledge.com/news/sending-message-from-nodejs-to-angular-by-service-worker-and-web-push-notifications
        - https://www.section.io/engineering-education/push-notification-in-nodejs-using-service-worker/
        - https://stackoverflow.com/questions/10703513/node-js-client-for-a-socket-io-server
        - https://www.npmjs.com/package/web-push

    - alternatives to gmail accounts that works with nodmailer
        - https://stackoverflow.com/questions/63288840/nodemailer-with-tutanota-mail-in-node-js
        - https://www.zoho.com/mail/

    - implement socket.io client notifications..eg mail notifications
        - https://socket.io/docs/v4/client-initialization/
        - https://tutorialedge.net/typescript/typescript-socket-io-tutorial/
        - https://medium.com/medvine/play-around-with-socket-io-and-typescript-c889d391ed00

    - 0nline push services
        - https://pusher.com/tutorials/push-notifications-node-service-workers/
        - https://www.section.io/engineering-education/push-notification-in-nodejs-using-service-worker/
        - test push service

    - socket.io server multiple ports
        - https://stackoverflow.com/questions/44277101/socket-io-listening-on-multiple-ports

    - IMAP API
        - https://imapapi.com/

- Node js and SMS
    - https://learn.vonage.com/blog/2019/09/16/how-to-send-and-receive-sms-messages-with-node-js-and-express-dr/#
    - https://www.freecodecamp.org/news/how-to-send-an-sms-in-node-js-via-smpp-gateway-9c7b12e4600a/

- Node.js USSD
    - https://andela.com/insights/africas-talking-node-js-express-ussd-application/
    - https://www.npmjs.com/package/ussd-menu-builder

////////////////////////////////////////////////////////

- minor structural changes
    - all services files to have X.service.ts. 
        Similar treatment to controllers, models and decorators
    - moving some codes to services
- implement basic login
    - b.valid()

//////////////////////////////////////////////////
- refine UserService::create()
    - clean up the code
- test login
    - catch errors
- Refine register
    - do cusom decorator for @IsUniqe
    - set template
        - header, body, signature, html, images
    - implement activation from email link
    - select mail host (Zoho, cloudmailer )
    -
- create interface for general query
    - https://github.com/typeorm/typeorm/blob/master/docs/find-options.md
- managing connections:
    - https://orkhan.gitbook.io/typeorm/docs/connection
    - https://orkhan.gitbook.io/typeorm/docs/connection-api
    check if connection exists:
    - https://stackoverflow.com/questions/42186674/typeorm-how-to-use-connection-as-standalone-object-with-types
- move uniqueValidation to base
- move requireValidation to base

/////////////////////////////////////
- typeorem/save to related tables: 
        - https://stackoverflow.com/questions/54885935/how-to-save-relation-in-manytomany-in-typeorm
- views
    - https://orkhan.gitbook.io/typeorm/docs/view-entities
- do docProcessing
    - relate with service table
    - implement doc_date
- challenge cannot get propertyMapping to work in the base class using async await:
    - Try spread syntax ...foo
    - Try rxjs:
        - https://stackoverflow.com/questions/59332631/is-there-any-way-to-get-data-from-the-database-without-using-async-await-in-nest
- create session
    - json column
        - https://github.com/typeorm/typeorm/blob/master/docs/entities.md#simple-json-column-type
            @Entity()
            export class User {

                @PrimaryGeneratedColumn()
                id: number;

                @Column("simple-json")
                profile: { name: string, nickname: string };

            }
//////////////////////////////////

    - clientNetID()
        - https://www.npmjs.com/package/node-device-detector
        - https://www.npmjs.com/package/device-detector-js
        - client_ip: 
            - https://www.npmjs.com/package/request-ip
            - https://stackoverflow.com/questions/8107856/how-to-determine-a-users-ip-address-in-node
        - browser fingerprint
            - https://www.npmjs.com/package/get-browser-fingerprint
        - hostname
            - https://stackoverflow.com/questions/4255264/getting-client-hostname-in-node-js
        - express session
            - https://www.section.io/engineering-education/session-management-in-nodejs-using-expressjs-and-express-session/
            - https://www.js-tutorials.com/nodejs-tutorial/nodejs-session-example-using-express-session/
            - https://www.geeksforgeeks.org/session-management-using-express-session-module-in-node-js/
            - https://medium.com/@irvingdinh/express-session-with-typescript-85bf6dff3dc9
            - https://www.rockyourcode.com/how-to-extend-express-request-with-session-in-typescript-ts23339-error/
            - https://stackoverflow.com/questions/38900537/typescript-extend-express-session-interface-with-own-class
            - https://www.npmjs.com/package/express-session
            - https://tsed.io/tutorials/session.html
            - https://dev.to/qoobes/express-session-failing-with-typescript-types-express-session-1ehk

- return login together with GetUserData()

//////////////////////////////////////////
- implemented async getDeviceNetId(): Promise<JSON> 
    - https://www.npmjs.com/package/device-detector-js
- implemented getIP()

- table naming
- update user data
    - update password
- design auto migration for various cd modules


- identify items that can be set as cd-api-library
- develop a way for initializing cd-api modules dev environment
- develop cli and gui for designing and initializing modules


- Login:
    - docprocessing
    - Login/authenticate
    - session
    - GetUserData()
        - ACL
        - cdobjects

02/08/2021
- implemented async getDeviceNetId(): Promise<JSON> 
    - https://www.npmjs.com/package/device-detector-js
- implemented getIP()
    
02/08/2021
- views
- do docProcessing
    - relate with service table
    - implement doc_date
- create session
- return login with session

29/07/2021
- refine UserService::create()
    - clean up the code
- test login
    - catch errors
- Refine register
    - do cusom decorator for @IsUniqe
    - set template
        - header, body, signature, html, images
    - implement activation from email link
    - select mail host (Zoho, cloudmailer )
    -
- create interface for general query
- managing connections:
    - check if connection exists:
- move uniqueValidation to base
- move requireValidation to base

15/07/2021
- update readme file

15/07/2021
    - implements cors
    - move 'utils' to 'sys'
    - setup config file

22/07/2012
- design and imlement architectural patterns
    - interfaces
    - use modules and controllers as ingerited from base classes
    - decorators
        - https://blog.logrocket.com/a-practical-guide-to-typescript-decorators/
    - injectors
        - https://levelup.gitconnected.com/dependency-injection-in-typescript-2f66912d143c
    - library development
        - https://aganglada.com/blog/how-to-create-your-own-typescript-library
    - IoC/Dependency Injection
        - https://www.npmjs.com/package/node-dependency-injection
- test TypeORM in isolation
        https://github.com/amitavdevzone/nest-js-quiz-manager?utm_source=my-lnk&utm_medium=youtube&utm_campaign=social

        validation:
        https://www.npmjs.com/package/class-validator
        https://github.com/typeorm/typeorm/issues/913

        bcrypt field setting:
        https://stackoverflow.com/questions/5881169/what-column-type-length-should-i-use-for-storing-a-bcrypt-hashed-password-in-a-d
        https://github.com/ademarre/binary-mcf

        nullable fields
        https://github.com/typeorm/typeorm/issues/3738

        auto date column:
        https://github.com/typeorm/typeorm/issues/3738
        @Entity()
        export class MyEntity {
            // ... a lot of attributes here
            @UpdateDateColumn() // nothing more needed
            public updated: Date;
        }

- setup and test TypeORM in cd environment
    - test connection to mysql
    - test execution at user controller
    - test response from common b::response()


23/07/2021
- implement email
        - https://nodemailer.com/about/
        - https://www.cloudmailin.com/blog/sending_and_receiving_email_in_node_2021
        - set up nodemailer
        - set up test mail at cloudmailin
        - set up corpdesk mail account at zohomail.com
        - successfully tested mail send

26/07/2021
- minor structural changes
    - all services files to have X.service.ts. 
        Similar treatment to controllers, models and decorators
    - moving some codes to services
- implement basic login
    - b.valid()



