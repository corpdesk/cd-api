- update readme file
- while it is not possible to install module at runtime,
further refinement are required in the booting sequence.
    - implements cors
    - move 'utils' to 'sys'
    - setup config file
    - install nodemon 
        - https://futurestud.io/tutorials/typescript-use-nodemon-to-restart-your-server-on-changes
        - 

- design and imlement architectural patterns
    - interfaces
    - use modules and controllers as ingerited from base classes
    - decorators
        - https://blog.logrocket.com/a-practical-guide-to-typescript-decorators/
    - injectors
        - https://levelup.gitconnected.com/dependency-injection-in-typescript-2f66912d143c
    - library development
        - https://aganglada.com/blog/how-to-create-your-own-typescript-library
    - IoC/Dependency Injection
        - https://www.npmjs.com/package/node-dependency-injection



- test TypeORM in isolation
        https://github.com/amitavdevzone/nest-js-quiz-manager?utm_source=my-lnk&utm_medium=youtube&utm_campaign=social

        validation:
        https://www.npmjs.com/package/class-validator
        https://github.com/typeorm/typeorm/issues/913

        bcrypt field setting:
        https://stackoverflow.com/questions/5881169/what-column-type-length-should-i-use-for-storing-a-bcrypt-hashed-password-in-a-d
        https://github.com/ademarre/binary-mcf

        nullable fields
        https://github.com/typeorm/typeorm/issues/3738

        auto date column:
        https://github.com/typeorm/typeorm/issues/3738
        @Entity()
        export class MyEntity {
            // ... a lot of attributes here
            @UpdateDateColumn() // nothing more needed
            public updated: Date;
        }

- setup and test TypeORM in cd environment
    - test connection to mysql
    - test execution at user controller
    - test response from common b::response()

/////////////////////////////////////////////////////////////////////////////////////////////
- implement basic registration
    - implement email
        - https://nodemailer.com/about/
        - https://www.cloudmailin.com/blog/sending_and_receiving_email_in_node_2021
        - set up nodemailer
        - set up test mail at cloudmailin
        - set up corpdesk mail account at zohomail.com
        - successfully tested mail send
/////////////////////////////////////////////////////////////////////////////////////////////
    - register with confirmation email
    - push notification:
        - https://pusher.com/tutorials/push-notifications-node-service-workers/
        - https://morioh.com/p/42a0bb87a165
        - https://blog.angular-university.io/angular-push-notifications/
        - https://www.thecoraledge.com/news/sending-message-from-nodejs-to-angular-by-service-worker-and-web-push-notifications
        - https://www.section.io/engineering-education/push-notification-in-nodejs-using-service-worker/
        - https://stackoverflow.com/questions/10703513/node-js-client-for-a-socket-io-server
        - https://www.npmjs.com/package/web-push

    - alternatives to gmail accounts that works with nodmailer
        - https://stackoverflow.com/questions/63288840/nodemailer-with-tutanota-mail-in-node-js
        - https://www.zoho.com/mail/

    - implement socket.io client notifications..eg mail notifications
        - https://socket.io/docs/v4/client-initialization/
        - https://tutorialedge.net/typescript/typescript-socket-io-tutorial/
        - https://medium.com/medvine/play-around-with-socket-io-and-typescript-c889d391ed00

    - 0nline push services
        - https://pusher.com/tutorials/push-notifications-node-service-workers/
        - https://www.section.io/engineering-education/push-notification-in-nodejs-using-service-worker/
        - test push service

    - socket.io server multiple ports
        - https://stackoverflow.com/questions/44277101/socket-io-listening-on-multiple-ports

    - IMAP API
        - https://imapapi.com/

- Node js and SMS
    - https://learn.vonage.com/blog/2019/09/16/how-to-send-and-receive-sms-messages-with-node-js-and-express-dr/#
    - https://www.freecodecamp.org/news/how-to-send-an-sms-in-node-js-via-smpp-gateway-9c7b12e4600a/

- Node.js USSD
    - https://andela.com/insights/africas-talking-node-js-express-ussd-application/
    - https://www.npmjs.com/package/ussd-menu-builder

////////////////////////////////////////////////////////

- minor structural changes
    - all services files to have X.service.ts. 
        Similar treatment to controllers, models and decorators
    - moving some codes to services
- implement basic login
    - b.valid()

//////////////////////////////////////////////////
- refine UserService::create()
    - clean up the code
- test login
    - catch errors
- Refine register
    - do cusom decorator for @IsUniqe
    - set template
        - header, body, signature, html, images
    - implement activation from email link
    - select mail host (Zoho, cloudmailer )
    -
- create interface for general query
    - https://github.com/typeorm/typeorm/blob/master/docs/find-options.md
- managing connections:
    - https://orkhan.gitbook.io/typeorm/docs/connection
    - https://orkhan.gitbook.io/typeorm/docs/connection-api
    check if connection exists:
    - https://stackoverflow.com/questions/42186674/typeorm-how-to-use-connection-as-standalone-object-with-types
- move uniqueValidation to base
- move requireValidation to base

/////////////////////////////////////
- typeorem/save to related tables: 
        - https://stackoverflow.com/questions/54885935/how-to-save-relation-in-manytomany-in-typeorm
- views
    - https://orkhan.gitbook.io/typeorm/docs/view-entities
- do docProcessing
    - relate with service table
    - implement doc_date
- challenge cannot get propertyMapping to work in the base class using async await:
    - Try spread syntax ...foo
    - Try rxjs:
        - https://stackoverflow.com/questions/59332631/is-there-any-way-to-get-data-from-the-database-without-using-async-await-in-nest
- create session
    - json column
        - https://github.com/typeorm/typeorm/blob/master/docs/entities.md#simple-json-column-type
            @Entity()
            export class User {

                @PrimaryGeneratedColumn()
                id: number;

                @Column("simple-json")
                profile: { name: string, nickname: string };

            }
//////////////////////////////////

    - clientNetID()
        - https://www.npmjs.com/package/node-device-detector
        - https://www.npmjs.com/package/device-detector-js
        - client_ip: 
            - https://www.npmjs.com/package/request-ip
            - https://stackoverflow.com/questions/8107856/how-to-determine-a-users-ip-address-in-node
        - browser fingerprint
            - https://www.npmjs.com/package/get-browser-fingerprint
        - hostname
            - https://stackoverflow.com/questions/4255264/getting-client-hostname-in-node-js
        - express session
            - https://www.section.io/engineering-education/session-management-in-nodejs-using-expressjs-and-express-session/
            - https://www.js-tutorials.com/nodejs-tutorial/nodejs-session-example-using-express-session/
            - https://www.geeksforgeeks.org/session-management-using-express-session-module-in-node-js/
            - https://medium.com/@irvingdinh/express-session-with-typescript-85bf6dff3dc9
            - https://www.rockyourcode.com/how-to-extend-express-request-with-session-in-typescript-ts23339-error/
            - https://stackoverflow.com/questions/38900537/typescript-extend-express-session-interface-with-own-class
            - https://www.npmjs.com/package/express-session
            - https://tsed.io/tutorials/session.html
            - https://dev.to/qoobes/express-session-failing-with-typescript-types-express-session-1ehk


Implement Streams for ACL
- acl_user_view
- consumer_resource_view
- acl_module_view
- module_member_view


- return login together with GetUserData()

//////////////////////////////////////////
- implemented async getDeviceNetId(): Promise<JSON> 
    - https://www.npmjs.com/package/device-detector-js
- implemented getIP()

- test validation of consumer_guid

- new tables
    - group
    - group_member
    - consumer
    - cdobj
    - cdobj_type 
    - acl
    - scheduler
    - module
    - company
    - company_type
    - company_sub_type
    - sys_config
    - sys_config_type
    - consumer_resource
    - consumer_resource_type
    - doc_type_approval
    - menu
    - menu_config

- new models


//////////////////////////
- due to some challenges in iteration for menu, consider rxjs
    - rxjs 7: https://javascript.plainenglish.io/rxjs-7-in-depth-32cc7bf3e5c
    - node.js emitters
    - promises examples
    -  Design Patterns: Elements of Reusable ObjectOriented Software, known casually as the Gang of Four book.
    - Functional Programming in JavaScript (Manning, 2016) by Luis Atencio
    - Reactive Programming
    - generators: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/function*
    - iterators: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterator
    - propagation of change
    - mysql & rxjs: https://www.advenage.com/topics/node-mysql-rxjs
    - fluent node.js: https://stackoverflow.com/questions/63288162/fluent-api-with-typescript
    - flat to nested: https://www.npmjs.com/package/flat-to-nested
    - rxjs recursive: https://dev.to/krumpet/getting-a-recursive-data-structure-asynchronously-with-rxjs-46b9
    - axios nodejs sample: https://www.section.io/engineering-education/how-to-create-a-simple-rest-api-using-typescript-and-nodejs/
    - forkjoin: https://www.learnrxjs.io/learn-rxjs/operators/combination/forkjoin
    - mergeMap(): streams (one depends on the other) are combined using mergeMap() or switchMap(), 
    - combineLatest(): independent streams are combined using combineLatest() 
    - websockets: 
        - https://www.npmjs.com/package/rxjs-websockets
        - https://javascript-conference.com/blog/real-time-in-angular-a-journey-into-websocket-and-rxjs/
        - https://rxjs.dev/api/webSocket/webSocket
    - rxjs socket.io:
        - https://steveholgado.com/rxjs-chat-app/
        - https://www.npmjs.com/package/rxjs-socket.io
        - https://stackoverflow.com/questions/29813503/how-to-use-rxjs-with-socket-io-on-event
    - Share observables:
        - share()
        - publish()

    Enrico Piccinin:
    - https://betterprogramming.pub/rxjs-patterns-emerging-from-stackoverflow-asynchronous-api-calls-as-streams-in-the-real-world-ef636c9af19a
    - https://medium.com/free-code-camp/rxjs-and-node-8f4e0acebc7c

    FUNCTIONAL PROGRAMMING:
    - code samples: https://github.com/luijar/functional-programming-js
    - listing 3.11 page(80/103) of 243: Node/Tree
    - what is Lodash.js framework?
    - what is Ramda.js, composition? and how to integrate it in cd
    - linqts: https://www.npmjs.com/package/linqts
    - Log4js
    - Mixins:
        - https://javascriptweblog.wordpress.com/2011/05/31/a-fresh-look-at-javascript-mixins/
        - https://www.oreilly.com/library/view/beautiful-javascript/9781449371142/ch01.html
    - Terminologies:
        - propagation of change, immutability, scalar values, Unicode values, monads, factors, mixins
          Tuples,
    - is there book on decorators?
    - examples of decorators in typescripts
    - designing system with decorators

- upon company registration, insert user to relevant groups
    - Comm, InteRact,  Memo, scheduler, pub, 
- upon user registration, insert user to relevant groups
    - Comm, InteRact,  Memo, scheduler, pub, 

- table naming
- update user data
    - update password
- design auto migration for various cd modules


- identify items that can be set as cd-api-library
- develop a way for initializing cd-api modules dev environment
- develop cli and gui for designing and initializing modules

//$username = "root";
//$password = "p@ssword";
$username = "karl";
$password = "secret";
//$username = "zog";
//$password = "siri01";
//$username = "jondoo";
//$password = "iiii";
//$username = "coolist";
//$password = "xxcc";
//$username = "goremo";
//$password = "siri";
//$username = "loice.adhiambo";
//$password = "muziki";
//$username = "widi.oremo";
//$password = "arsenali";
//$myvars = user_auth($username, $password);

- Integrating promises and rxjs 
    - https://benlesh.medium.com/rxjs-observable-interop-with-promises-and-async-await-bebb05306875

- Login:
    - docprocessing
    - Login/authenticate
    - session
    - GetUserData()
        - cover rxjs with the view of replacing most asyc/awit
        - Implement ACL using rxjs

dynamic menu:
    - return anon menu on login failure or on appInit

- review backend as a cloud:
    - node.js cluster
        - https://blog.appsignal.com/2021/02/03/improving-node-application-performance-with-clustering.html
        - https://nodejs.org/api/cluster.html
    - mysql cluster
    - kubernates
        - https://www.digitalocean.com/community/tech_talks/how-to-deploy-a-resilient-node-js-application-on-kubernetes-from-scratch
    - redis as chache system
    - backup as a cloud
    - visualization



- Admin Console
    - users
        - view/search
        - join/remove from group
        - join/remove consumer
    - groups
    - consumer
        - consumer resources
    - modules
    - app-market

- prepare data for module table
    - dataset components:
        - data
        - fields
        - pagination info
        - aggregation
    - typeorm:get fields:
        - connection.getMetadata("User").columns
    - typeorm: paginate:
    - https://stackoverflow.com/questions/53922503/how-to-implement-pagination-in-nestjs-with-typeorm

- Table data:
    - select fields
    - paginate results

ONLINE DEPLOYMENT:
Cheap hosting:
- https://dev.to/ramko9999/host-and-use-redis-for-free-51if
- https://www.fastcomet.com/nodejs-hosting

Website:
- general info
- documentation
- corpdesk demo
- business partnerships
    - students mentorship platform
    - certification

Front End Demo:
- register user
- login as public user
    - interact with public modules
    - user profile
    - calendar
    - pubs
    
- adopt a user and consumer member
- login as consumer user
    - inteRact
    - chat
    - memo
    - pms
- login to different consumers and view different applications
    - booking
    - mpesa

- install an application from app-market
    - free application
        - public health software
    - paid for app
        - ardwino based app
    - free app with ads
        - accts
    - upgrade free app to non-advert
        - accts
- scalability demos
    - multi-server expansion
    - load balance demos with visualization
    
- ease of management:
    - setup on existing server
    - buckup
    - migration
    - visualization for backend performance

- Areas for application devs
    - block-chain apps
    - ardwino apps
    - ai-api

Back End Demo:
    - technical documentation
    - automation in module development
    - app markets
        - earning from module development
    - training and certifications

implement Base::validFields(req, res):
    - 

26/09/2021
- Table data:
    - select fields
    - paginate results

19/09/2021
dynamic menu:
    - return anon menu on login failure or on appInit

13/09/2021
- remote app security:
        - develop reusable guard at the library
        - could not get indexedDB/dexie to work
        - share session data via localStorage
        - implement queryParams for privilaged routes

06/09/2021
- Login:
    - docprocessing
    - Login/authenticate
    - session
    - GetUserData()
        - cover rxjs with the view of replacing most asyc/awit
        - Implement ACL using rxjs
        - refined isConsumer to return publicModules + userModules
        - refined isGuest to return only publicModules
        - clean up codes

02/08/2021
- implemented async getDeviceNetId(): Promise<JSON> 
    - https://www.npmjs.com/package/device-detector-js
- implemented getIP()



02/08/2021
- views
- do docProcessing
    - relate with service table
    - implement doc_date
- create session
- return login with session

29/07/2021
- refine UserService::create()
    - clean up the code
- test login
    - catch errors
- Refine register
    - do cusom decorator for @IsUniqe
    - set template
        - header, body, signature, html, images
    - implement activation from email link
    - select mail host (Zoho, cloudmailer )
    -
- create interface for general query
- managing connections:
    - check if connection exists:
- move uniqueValidation to base
- move requireValidation to base

15/07/2021
- update readme file

15/07/2021
    - implements cors
    - move 'utils' to 'sys'
    - setup config file

22/07/2012
- design and imlement architectural patterns
    - interfaces
    - use modules and controllers as ingerited from base classes
    - decorators
        - https://blog.logrocket.com/a-practical-guide-to-typescript-decorators/
    - injectors
        - https://levelup.gitconnected.com/dependency-injection-in-typescript-2f66912d143c
    - library development
        - https://aganglada.com/blog/how-to-create-your-own-typescript-library
    - IoC/Dependency Injection
        - https://www.npmjs.com/package/node-dependency-injection
- test TypeORM in isolation
        https://github.com/amitavdevzone/nest-js-quiz-manager?utm_source=my-lnk&utm_medium=youtube&utm_campaign=social

        validation:
        https://www.npmjs.com/package/class-validator
        https://github.com/typeorm/typeorm/issues/913

        bcrypt field setting:
        https://stackoverflow.com/questions/5881169/what-column-type-length-should-i-use-for-storing-a-bcrypt-hashed-password-in-a-d
        https://github.com/ademarre/binary-mcf

        nullable fields
        https://github.com/typeorm/typeorm/issues/3738

        auto date column:
        https://github.com/typeorm/typeorm/issues/3738
        @Entity()
        export class MyEntity {
            // ... a lot of attributes here
            @UpdateDateColumn() // nothing more needed
            public updated: Date;
        }

- setup and test TypeORM in cd environment
    - test connection to mysql
    - test execution at user controller
    - test response from common b::response()


23/07/2021
- implement email
        - https://nodemailer.com/about/
        - https://www.cloudmailin.com/blog/sending_and_receiving_email_in_node_2021
        - set up nodemailer
        - set up test mail at cloudmailin
        - set up corpdesk mail account at zohomail.com
        - successfully tested mail send

26/07/2021
- minor structural changes
    - all services files to have X.service.ts. 
        Similar treatment to controllers, models and decorators
    - moving some codes to services
- implement basic login
    - b.valid()



